name: Security Scan

on:
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety semgrep
    
    - name: Run Bandit security scan
      run: |
        echo "üîç Running Bandit security scan..."
        bandit -r src/ -f json -o bandit-report.json
        bandit -r src/
      continue-on-error: true
    
    - name: Run Safety dependency check
      run: |
        echo "üîç Checking dependencies for known vulnerabilities..."
        pip install -e .
        safety check --json --output safety-report.json || true
        safety check
      continue-on-error: true
    
    - name: Check for secrets in code
      run: |
        echo "üîç Scanning for hardcoded secrets..."
        ! grep -r -E "(api_key|password|secret|token|private_key)" src/ --include="*.py" || {
          echo "‚ùå Potential secrets found in source code"
          exit 1
        }
        echo "‚úÖ No hardcoded secrets found"
    
    - name: Verify privacy compliance
      run: |
        echo "üîí Verifying privacy-first design compliance..."
        ! grep -r -E "(\.content|message.*text|data\[.*content\])" src/ --include="*.py" || {
          echo "‚ùå Potential content access found - violates privacy-first design"
          exit 1
        }
        echo "‚úÖ Privacy compliance verified"
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
        retention-days: 30

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3